
Description: AWS CI pipeline for abalone example
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Required Parameters
        Parameters:
          - SageMakerProjectName
          - NotebookInstanceType
      - Label:
          default: Optional GitHub Parameters
        Parameters:
          - GitHubRepo
          - GitHubBranch
          - GitHubUser
          - GitHubToken
    ParameterLabels:
      SageMakerProjectName:
        default: Model Name
      Env:
        Default: Environment  
      GitHubRepo:
        default: GitHub Repository
      GitHubBranch:
        default: GitHub Branch
      GitHubUser:
        default: GitHub Username
      GitHubToken:
        default: GitHub Access Token
Parameters:
  SageMakerProjectName:
    Default: Abalone
    Type: String
    Description: Name of the project
    MinLength: !!int 1
    MaxLength: !!int 32
    AllowedPattern: ^[a-zA-Z](-*[a-zA-Z0-9])*
  SageMakerProjectId:
    Type: String
    Description: Service generated Id of the project.
  Env:
    Default: Dev
    Type: String
  GitHubUser:
    Default: sidhukumar
    Description: Your GitHub username
    Type: String
  GitHubRepo:
    Default: AWS-Abalone-pipeline
    Type: String
    Description: Name of the GitHub repository
  GitHubBranch:
    Default: master
    Type: String
    Description: Name of the branch the code is located
  GitHubToken:
    NoEcho: true
    Description: Github OAuthToken with access to Repo. It might look something like 9b189a1654643522561f7b3ebd44a1531a4287af. Go to https://github.com/settings/tokens
    Type: String

Conditions:
  GitHubTokenEmpty: !Not 
  - !Equals 
   - ''
   - !Ref GitHubToken

Resources:
  Repository:
    Type: AWS::ECR::Repository
    DeletionPolicy: Delete
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken                                         
              - Resource: 
                  - !Sub arn:aws:s3:::${ArtifactsBucket}/*
                Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetBucket
                  - s3:ListBucket
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Repository}
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactsBucket}/*
                Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetBucket
                  - s3:ListBucket
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:                  
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole
                  - kms:DescribeKey
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:ReEncrypt*   
  SageMakerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${SageMakerProjectName}-sagemaker-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowSageMaker
            Effect: Allow
            Action:
              - sagemaker:CreateExperiment
              - sagemaker:CreateTrial
              - sagemaker:CreateHyperParameterTuningJob
              - sagemaker:CreateModel
              - sagemaker:CreateProcessingJob
              - sagemaker:CreateTrainingJob
              - sagemaker:CreateTransformJob
              - sagemaker:DeleteMonitoringSchedule
              - sagemaker:DescribeTrainingJob
              - sagemaker:DescribeHyperParameterTuningJob
              - sagemaker:DescribeEndpoint
              - sagemaker:DescribeEndpointConfig
              - sagemaker:DescribeMonitoringSchedule
              - sagemaker:DescribeProcessingJob
              - sagemaker:DescribeTrainingJob
              - sagemaker:DescribeTransformJob
              - sagemaker:InvokeEndpoint
              - sagemaker:ListTags
              - sagemaker:ListMonitoringExecutions
              - sagemaker:Search
              - sagemaker:StopProcessingJob
              - sagemaker:StopTrainingJob
              - sagemaker:StopTransformJob
              - kms:CreateGrant
            Resource:
              - !Sub arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:*/${SageMakerProjectName}-${Env}*
              - !Sub arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:*/${SageMakerProjectName}-model-monitoring-*
          - Sid: AllowSageMakerSearch
            Effect: Allow
            Action:
              - sagemaker:ListMonitoringExecutions
              - sagemaker:ListMonitoringSchedules
              - sagemaker:Search
            Resource: "*"
      Roles:
        - !Ref SageMakerRole

  SageMakerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${SageMakerProjectName}-sagemaker-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
          - Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - "sts:AssumeRole"
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/CloudWatchSyntheticsFullAccess"
      Policies:
        - PolicyName: !Sub ${SageMakerProjectName}-sagemaker-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: AllowCloudFormation
                Effect: Allow
                Action:
                  - cloudformation:*
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${SageMakerProjectName}-${Env}*
              - Sid: AllowCloudWatch
                Effect: Allow
                Action:
                  - cloudwatch:PutDashboard
                  - cloudwatch:PutMetricData
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:DeleteAlarms
                  - cloudwatch:DeleteDashboards
                  - iam:GetRole
                Resource: "*"
              - Sid: AllowCanaryPassRole
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"
                Condition:
                  StringEquals:
                    iam:PassedToService:
                      - lambda.amazonaws.com  
  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub KMS Key for mlops pipeline ${SageMakerProjectName}
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref AWS::StackName
        Statement:
          - Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "kms:*"
            Resource: "*"

  KMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/mlops-${SageMakerProjectName}
      TargetKeyId: !Ref KMSKey

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

  GitHubSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Sub GitHub Secret for ${GitHubRepo}
      KmsKeyId: !Ref KMSKey
      SecretString: !Sub '{"username":"${GitHubUser}","password":"${GitHubToken}"}'

  CodeBuildProject:
      Type: AWS::CodeBuild::Project
      Properties:
        Name: AbaloneBuild
        ServiceRole: !Ref CodeBuildServiceRole
        Artifacts:
          Type: CODEPIPELINE
        Environment:
          Type: LINUX_CONTAINER
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Source:
          Type: CODEPIPELINE
          BuildSpec: codebuild-buildspec.yml
        TimeoutInMinutes: 480

  PipelineProject:
      Type: AWS::CodeBuild::Project
      Properties:
        Name: Sagemakerpipeline
        ServiceRole: !Ref CodeBuildServiceRole
        Artifacts:
          Type: CODEPIPELINE
        Environment:
          Type: LINUX_CONTAINER
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
          EnvironmentVariables:
          - Name: SAGEMAKER_PROJECT_NAME
            Value: !Ref SageMakerProjectName
          - Name: SAGEMAKER_PROJECT_ID
            Value: !Ref SageMakerProjectId
          - Name: ARTIFACT_BUCKET
            Value: !Ref ArtifactsBucket
          - Name: SAGEMAKER_PIPELINE_NAME
            Value: !Sub sagemaker-${SageMakerProjectName}
          - Name: SAGEMAKER_PIPELINE_ROLE_ARN
            Value: !GetAtt SageMakerRole.Arn
          - Name: AWS_REGION
            Value: !Ref AWS::Region
        Source:
          Type: CODEPIPELINE
          BuildSpec: buildspec.yml
        TimeoutInMinutes: 480      

  ModelBuildPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket        
      Stages:
        - Name: GitSource
          Actions:
            - Name: AWS-Abalone-pipeline
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: ModelBuildSourceArtifact
              RunOrder: 1      
            
        - Name: Execute-test
          Actions:
          - Name: Lint-Test
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: 1
            InputArtifacts:
            - Name: ModelBuildSourceArtifact
            OutputArtifacts:
            - Name: ModelBuildBuildArtifact
            Configuration:
              ProjectName: !Ref CodeBuildProject
            RunOrder: 1
          - Name: Unit-Test
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: 1
            InputArtifacts:
            - Name: ModelBuildSourceArtifact
            OutputArtifacts:
            - Name: ModelBuildArtifact
            Configuration:
              ProjectName: !Ref CodeBuildProject
            RunOrder: 2
           

        - Name: Sagemaker-Pipeline-Execution
          Actions:
          - Name: Execute-sagemakerpipeline
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: 1
            InputArtifacts:
            - Name: ModelBuildSourceArtifact
            OutputArtifacts:
            - Name: BuildArtifact
            Configuration:
              ProjectName: !Ref PipelineProject
            RunOrder: 1    
  S3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${SageMakerProjectName}-s3-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: S3Resources
            Effect: Allow
            Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:PutObject
            Resource:
              - !Sub arn:aws:s3:::${ArtifactsBucket}/*
              - !Sub arn:aws:s3:::${ArtifactsBucket}
              - !Sub arn:aws:s3:::sagemaker-${AWS::Region}-${AWS::AccountId}/*
              - !Sub arn:aws:s3:::sagemaker-${AWS::Region}-${AWS::AccountId}
          - Sid: S3Bucket
            Effect: Allow
            Action:
              - s3:CreateBucket
              - s3:ListBucket
            Resource:
              - !Sub arn:aws:s3:::sagemaker-${AWS::Region}-${AWS::AccountId}    
          - Sid: AllowLogs
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "*"
      Roles:
        - !Ref SageMakerRole      
